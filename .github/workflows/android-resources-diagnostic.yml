name: Android Resources Diagnostic

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  resources-diagnostic:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android platform and build-tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Configure Build Properties
        run: |
          echo "CLIENT_ID=${{ secrets.CLIENT_ID || 'PLACEHOLDER' }}" >> local.properties
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET || 'PLACEHOLDER' }}" >> local.properties

      - name: Print Android SDK info
        run: |
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"
          sdkmanager --list | head -n 100
          ls -la "${ANDROID_SDK_ROOT}/platforms/android-35" || true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Print Gradle project properties (compileSdk)
        run: ./gradlew :app:properties | grep -i "compileSdk" || true

      - name: Grep '{str}' in app resources
        run: |
          echo "Scanning app/src/main/res for >{str}< ..."
          if grep -R --line-number '>{str}<' app/src/main/res; then
            echo "Found raw {str} placeholders in app resources (needs fix)."
          else
            echo "No raw {str} found in app resources."
          fi

      - name: Grep '{str}' in Gradle transformed values (best-effort, may be large)
        run: |
          echo "Scanning Gradle caches for library values containing {str} (this can be large)..."
          grep -R --line-number "{str}" ~/.gradle/caches 2>/dev/null | head -n 200 || true

      - name: Merge resources (release) with --debug and --stacktrace
        run: ./gradlew :app:mergeReleaseResources --debug --stacktrace

      - name: List merged values files (diagnostic)
        if: always()
        run: |
          echo "Searching for merged 'values.xml' files under app/build (merged.dir / merged_res / incremental)..."
          echo "--- find matches ---"
          find app/build -type f -name values.xml -path "*merged.dir*" -print || true
          find app/build -type f -path "*/merged.dir/*/values*/values.xml" -print || true
          find app/build -type f -path "*/merged_res/*/values*/values.xml" -print || true
          find app/build -type f -name values.xml -path "*/merge*/merge*/merged.dir/*" -print || true
          echo "--- list directories around matches ---"
          find app/build -type f -name values.xml -path "*merged.dir*" -exec dirname {} \; | sort -u || true
          echo "Done listing. (If nothing printed above, the merged values files were not produced at the expected locations.)"

      - name: Collect merged values into a deterministic folder (system-wide search)
        if: always()
        run: |
          set -euo pipefail
          echo "Preparing merged-values/ directory for upload..."
          rm -rf merged-values
          mkdir -p merged-values/values

          echo "=== App-local search (fast) ==="
          find app/build -type f \( -iname 'values.xml' -o -iname 'values-*.xml' -o -iname '*values*.xml' \) -print > /tmp/values_found_app.txt 2>/dev/null || true
          echo "App-local results (first 200 lines):"
          sed -n '1,200p' /tmp/values_found_app.txt || true
          echo "App-local count: $(wc -l < /tmp/values_found_app.txt || echo 0)"

          echo "=== System-wide search (from /) for values.xml and values-*.xml â€” pruning /proc,/sys,/dev,/run,/tmp,/var/run to avoid noisy mounts ==="
          # Note: prune noisy/proc/sys/dev mounts to avoid permission errors and infinite loops
          find / \
            \( -path /proc -o -path /sys -o -path /dev -o -path /run -o -path /tmp -o -path /var/run -o -path /var/lib/docker -o -path /mnt -o -path /media \) -prune -o \
            -type f \( -iname 'values.xml' -o -iname 'values-*.xml' -o -iname '*values*.xml' \) -print 2>/dev/null > /tmp/values_found_system.txt || true

          echo "System-wide results (first 500 lines):"
          sed -n '1,500p' /tmp/values_found_system.txt || true
          echo "System-wide count: $(wc -l < /tmp/values_found_system.txt || echo 0)"

          echo "=== Also perform an aggressive search for any *.xml under likely merged_res/merged.dir/outputs/intermediates (workspace) ==="
          find app/build -type f \( -path "*/merged_res/*/*.xml" -o -path "*/merged.dir/*/*.xml" -o -path "*/intermediates/*/*/*.xml" -o -path "*/outputs/*/resources*/**/*.xml" \) -print > /tmp/values_found_aggressive.txt 2>/dev/null || true
          echo "Aggressive results (first 200 lines):"
          sed -n '1,200p' /tmp/values_found_aggressive.txt || true
          echo "Aggressive count: $(wc -l < /tmp/values_found_aggressive.txt || echo 0)"

          # merge lists (unique)
          cat /tmp/values_found_app.txt /tmp/values_found_system.txt /tmp/values_found_aggressive.txt | sort -u > /tmp/values_all.txt || true
          echo "Total unique candidate files: $(wc -l < /tmp/values_all.txt || echo 0)"
          sed -n '1,500p' /tmp/values_all.txt || true

          # copy found files to merged-values/values/ with path-safe names
          if [ -s /tmp/values_all.txt ]; then
            while IFS= read -r f; do
              if [ -f "$f" ]; then
                safe=$(echo "$f" | tr '/' '_' | sed 's/[^A-Za-z0-9_.-]/_/g')
                echo "Copying: $f -> merged-values/values/${safe}"
                cp -v "$f" "merged-values/values/${safe}" || echo "Copy failed for $f"
              else
                echo "Skipping (not a regular file): $f"
              fi
            done < /tmp/values_all.txt
          else
            echo "No candidate files found by system-wide/app/aggressive searches."
          fi

          echo "Final contents of merged-values/values/:"
          ls -la merged-values/values || true
          echo "Recursive listing of merged-values/:"
          ls -R merged-values || true
          echo "File count in merged-values/values: $(find merged-values/values -type f | wc -l || true)"

      - name: Debug file location
        if: always()
        run: |
          echo "Listing merged-values directory recursively (debug)..."
          ls -R merged-values || true

      - name: Upload merged values (release)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merged-values-${{ github.sha }}
          path: |
            merged-values/**
            # keep the original globs as fallback (ignored if no files)
            app/build/**/merged.dir/**/values*/values.xml
            app/build/**/merged_res/**/values*/values.xml
            app/build/**/merge**Resources/**/merged.dir/**/values*/values.xml
            app/build/**/intermediates/**/merged.dir/**/values*/values.xml
          if-no-files-found: warn
          retention-days: 7
          compression-level: 6
          overwrite: false
          include-hidden-files: false

      - name: Upload Gradle daemon/build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs-${{ github.sha }}
          path: |
            ~/.gradle/daemon/*/daemon-*.out.log
            **/build/outputs/logs/**
            merge-debug.log
          if-no-files-found: ignore
          retention-days: 7