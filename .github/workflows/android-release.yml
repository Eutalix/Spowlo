name: Android Release APK

on:
  workflow_dispatch:
    inputs:
      publish_release:
        description: "Publish GitHub Release after build?"
        type: boolean
        default: false
      release_name:
        description: "Optional release name (used only if publish_release=true). Defaults to the ref name."
        required: false
        type: string
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Cache can be re-enabled once the build is stable
      # - name: Cache Gradle packages
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/libs.versions.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name: Configure Build Properties
        run: |
          echo "CLIENT_ID=${{ secrets.CLIENT_ID || 'PLACEHOLDER' }}" >> local.properties
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET || 'PLACEHOLDER' }}" >> local.properties
          if [ -n "${{ secrets.SIGNING_KEY_BASE64 }}" ]; then
            echo "storeFile=$(pwd)/release.keystore" >> keystore.properties
            echo "storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}" >> keystore.properties
            echo "keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}" >> keystore.properties
            echo "keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}" >> keystore.properties
            echo "${{ secrets.SIGNING_KEY_BASE64 }}" | base64 --decode > release.keystore
          else
            echo "Signing secrets not found. Building an unsigned release APK."
          fi

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle (Clean + Assemble)
        run: ./gradlew clean :app:assembleRelease

      # NEW: Always upload APK as artifact so you can download it from the workflow run
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Spowlo-APK-${{ github.ref_name || github.sha }}
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error
          retention-days: 7
          compression-level: 6

      # Create a GitHub Release only when:
      # - push event with a tag (vX.Y.Z), OR
      # - workflow_dispatch with publish_release=true
      - name: Create GitHub Release
        if: >
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
          (github.event_name == 'workflow_dispatch' && inputs.publish_release == 'true')
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/*.apk
          name: ${{ inputs.release_name || format('Release {0}', github.ref_name) }}
          generate_release_notes: true