# .github/workflows/android-release.yml

name: Android Release APK

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # NOTE: Disabling cache temporarily to rule out caching issues.
      # We can re-enable this once the build is stable.
      # - name: Cache Gradle packages
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/libs.versions.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - name: Configure Build Properties
        run: |
          echo "CLIENT_ID=${{ secrets.CLIENT_ID || 'PLACEHOLDER' }}" >> local.properties
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET || 'PLACEHOLDER' }}" >> local.properties
          if [ -n "${{ secrets.SIGNING_KEY_BASE64 }}" ]; then
            echo "storeFile=$(pwd)/release.keystore" >> keystore.properties
            echo "storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}" >> keystore.properties
            echo "keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}" >> keystore.properties
            echo "keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}" >> keystore.properties
            echo "${{ secrets.SIGNING_KEY_BASE64 }}" | base64 --decode > release.keystore
          else
            echo "Signing secrets not found. Building an unsigned release APK."
          fi

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # --- MODIFIED: Added 'clean' task to ensure a fresh build ---
      # This command will delete old build artifacts before compiling,
      # which can resolve intermittent packaging errors caused by inconsistent state.
      - name: Build with Gradle (Clean + Assemble)
        run: ./gradlew clean :app:assembleRelease

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/release/*.apk
          name: Release ${{ github.ref_name }}
          generate_release_notes: true